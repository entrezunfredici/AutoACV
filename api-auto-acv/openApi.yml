openapi: '3.0.2'
info:
  title: Auto-ACV-API
  version: '1.0'
servers:
  - url: '{protocol}://{server}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      server:
        default: localhost:8000
tags:
  - name: "users"
    description: "Tout les utilisateur"
  - name: "vehicules"
    description: "Tout les vehicules"
  - name: "mixsEnergetiques"
    description: "Tout les mixs energetiques"
  - name: "sourcesEnergie"
    description: "Toute les sources d'energie"
paths:
  /users/{username}:
    get:
      tags:
        - "users"
      summary: "récupérer un utilisateur par son username"
      operationId: getUserByUsername
      parameters:
        - name: "username"
          in: "path"
          description: "Le nom d'utilisateur"
          required: true
          schema: 
            type: "string"
      responses:
        "200":
          description: "L'utilisateur recherché est retourné"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/users'
        "404":
          description: "L'utilisateur n'a pas été trouvée"
  /users/{id}:
    get:
      tags:
        - "users"
      summary: "récupérer un utilisateur par son id"
      operationId: "getUserById"
      parameters:
        - name: "id"
          in: path
          description: "L'identifiant de l'utilisateur"
          required: true
          schema:
            type: "integer"
      responses:
        "200":
          description: "L'utilisateur à été trouvé"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/getusers'
        "404":
          description: "L'utilisateur n'a pas été trouvé"
    patch:
      tags:
        - "users"
      summary: "mettre à jour un utilisateur"
      operationId: "updateUserById"
      requestBody:
        description: "doit contenir des information de champs à modifier"
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/users'
      responses:
        "201":
          description: "L'utilisateur à été ajouté à la base de donnée"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/getusers'
        "400":
          description: "Un champs essentiels n'est pas présent ou incorrect (username, password, mail)"
    delete:
      tags:
        - "users"
      summary: "supprimer un utilisateur"
      operationId: "deleteUserById"
      parameters:
        - name: "id"
          in: "path"
          description: "L'identifiant de l'utilisateur"
          required: true
          schema: 
            type: "integer"
      responses:
        "201":
          description: "L'utilisateur à été supprimé"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/getusers'
        "404":
          description: "L'utilisateur n'a pas été trouvé"
  /users:
    post: 
      tags:
        - "users"
      summary: "ajouter un utilisateur"
      operationId: addUser
      requestBody:
        description: "doit contenir les informations essentiels soit l'username, le password et le mail"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users'
      responses:
        "201":
          description: "Ajoute un utilisateur"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/getusers'
        "400": 
          description: "Un champs essentiels n'est pas présent ou incorrect (username, password, mail)"
  /mixsEnergetiques/{country}:
    get: 
      tags:
        - "mixsEnergetiques"
      summary: "récupérer un mix energetique par le champs country"
      operationId: getMixsByCountry
      parameters:
        - name: "country"
          in: "path"
          description: "le pays du mix"
          required: true
          schema: 
            type: "string"
      responses:
        "200":
          description: "Le mix recherché est retourné"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/mixsEnergetiques'
        "404":
          description: "Le mix n'a pas été trouvé"
        "500":
          description: "Erreur interne"
    patch:
      tags:
        - "mixsEnergetiques"
      summary: "modifier un mix energetique par le champ country"
      operationId: updateMixByCountry
      requestBody:
        description: "doit contenir des information de champs à modifier"
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/mixsEnergetiques'
      responses:
        "200":
          description: "le mix à été modifié"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/mixsEnergetiques'
        "404":
          description: "Le mix n'a pas été trouvé"
        "500":
          description: "Erreur interne"
  /sourcesEnergies:
    get: 
      tags:
        - "sourcesEnergie"
      summary: "récuperer l'ensemble des sources d'energie"
      operationId: getPowerSources
      responses:
        "200":
          description: "Les sources sont retournées"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/sourcesEnergies'
        "404":
          description: "La source n'existe pas"
    patch: 
      tags:
        - "sourcesEnergie"
      summary: "modifier la ligne de source d'energie"
      operationId: editPowerSources
      requestBody:
        description: "doit contenir des information de champs à modifier"
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/sourcesEnergies'
      responses:
        "201":
          description: "La source est modifiée"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/sourcesEnergies'
        "400":
          description: "Un paramètre est manquant"
  /sourcesEnergies/{id}:
    get: 
      tags:
        - "sourcesEnergie"
      summary: "récupérer une source d'energie par son id"
      operationId: getPowerSourceById
      parameters:
        - name: "id"
          in: "path"
          description: "L'identifiant de la source d'energie"
          required: true
          schema: 
            type: "integer"
      responses:
        "200":
          description: "La source d'energie à été trouvé"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/sourcesEnergies'
        "404":
          description: "La source d'energie n'a pas été trouvé"
  /sourcesEnergies/name/{name}:
    get: 
      tags:
        - "sourcesEnergie"
      summary: "récupérer une source d'energie par son nom"
      operationId: getPowerSourceByName
      parameters:
        - name: "name"
          in: "path"
          description: "Le nom de la source d'energie"
          required: true
          schema: 
            type: "string"
      responses:
        "200":
          description: "La source d'energie à été trouvé"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/sourcesEnergies'
        "404":
          description: "La source d'energie n'a pas été trouvé"

  /vehicules:
    get: 
      tags:
        - "vehicules"
      summary: "recuperer tout les véhicules"
      operationId: getVehicules
      responses:
        "200":
          description: "Les véhicules sont retournés"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/vehicules'
        "404":
          description: "Les vehicules n'existe pas"
    post: 
      tags:
        - "vehicules"
      summary: "ajouter un vehicule"
      operationId: addVehicule
      requestBody:
        description: "doit contenir toutes les informations sur un véhicule"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vehicules'
      responses:
        "201":
          description: "Un véhicules à été ajouté"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/vehicules'
        "400": 
          description: "Un champs essentiels n'est pas présent ou incorrect"
  /vehicules/{id}:
      get:
        tags:
          - "vehicules"
        summary: "récupérer un vehicule par son id"
        operationId: "getVehiculeById"
        parameters:
          - name: "id"
            in: path
            description: "L'identifiant du vehicule"
            required: true
            schema:
              type: "integer"
        responses:
          "200":
            description: "Le véhicule à été trouvé"
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/getusers'
          "404":
            description: "Le véhicule n'a pas été trouvé"
      patch:
        tags: 
          - "vehicules"
        summary: "modifier un vehicule"
        operationId: updateVehicule
        requestBody:
          description: "doit contenir des information de champs à modifier"
          required: true
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/vehicules'
        responses:
          "201":
            description: "Le vehicule à été modifié"
            content:
              application/json:
                schema: 
                  $ref: '#/components/schemas/vehicules'
          "400":
            description: "Un champs essentiels n'est pas présent ou incorrect"
  /tiquetsSources:
    get:
      tags:
        - "sourcesEnergie"
      summary: "récupérer tout les tiquets sources"
      operationId: "getTiquetsSources"
      responses:
        "200":
          description: "Les tiquets sources sont retournés"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/sourcesEnergies'
        "404":
          description: "Les tiquets sources n'existe pas"
    post:
      tags:
        - "sourcesEnergie"
      summary: "ajouter un tiquet source"
      operationId: "addTiquetSource"
      requestBody:
        description: "doit contenir toutes les informations sur un tiquet source"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sourcesEnergies'
      responses:
        "201":
          description: "Un tiquet source à été ajouté"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/sourcesEnergies'
        "400": 
          description: "Un champs essentiels n'est pas présent ou incorrect"
  /tiquetsSources/{id}:
    delete:
      tags:
        - "sourcesEnergie"
      summary: "supprimer un tiquet source"
      operationId: "deleteTiquetSource"
      parameters:
        - name: "id"
          in: "path"
          description: "L'identifiant du tiquet source"
          required: true
          schema: 
            type: "integer"
      responses:
        "201":
          description: "Le tiquet source à été supprimé"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/sourcesEnergies'
        "404":
          description: "Le tiquet source n'a pas été trouvé"
  /tiquetsMixs:
    get:
      tags:
        - "mixsEnergetiques"
      summary: "récupérer tout les tiquets mixs"
      operationId: "getTiquetsMixs"
      responses:
        "200":
          description: "Les tiquets mixs sont retournés"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/mixsEnergetiques'
        "404":
          description: "Les tiquets mixs n'existe pas"
    post:
      tags:
        - "mixsEnergetiques"
      summary: "ajouter un tiquet mix"
      operationId: "addTiquetMix"
      requestBody:
        description: "doit contenir toutes les informations sur un tiquet mix"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mixsEnergetiques'
      responses:
        "201":
          description: "Un tiquet mix à été ajouté"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/mixsEnergetiques'
        "400": 
          description: "Un champs essentiels n'est pas présent ou incorrect"
  /tiquetsMixs/{id}:
    delete:
      tags:
        - "mixsEnergetiques"
      summary: "supprimer un tiquet mix"
      operationId: "deleteTiquetMix"
      parameters:
        - name: "id"
          in: "path"
          description: "L'identifiant du tiquet mix"
          required: true
          schema: 
            type: "integer"
      responses:
        "201":
          description: "Le tiquet mix à été supprimé"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/mixsEnergetiques'
        "404":
          description: "Le tiquet mix n'a pas été trouvé"
  /tiquetsVehicules:
    get:
      tags:
        - "vehicules"
      summary: "récupérer tout les tiquets vehicules"
      operationId: "getTiquetsVehicules"
      responses:
        "200":
          description: "Les tiquets vehicules sont retournés"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/vehicules'
        "404":
          description: "Les tiquets vehicules n'existe pas"
    post:
      tags:
        - "vehicules"
      summary: "ajouter un tiquet vehicule"
      operationId: "addTiquetVehicule"
      requestBody:
        description: "doit contenir toutes les informations sur un tiquet vehicule"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vehicules'
      responses:
        "201":
          description: "Un tiquet vehicule à été ajouté"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/vehicules'
        "400": 
          description: "Un champs essentiels n'est pas présent ou incorrect"
  /tiquetsVehicules/{id}:
    delete:
      tags:
        - "vehicules"
      summary: "supprimer un tiquet vehicule"
      operationId: "deleteTiquetVehicule"
      parameters:
        - name: "id"
          in: "path"
          description: "L'identifiant du tiquet vehicule"
          required: true
          schema: 
            type: "integer"
      responses:
        "201":
          description: "Le tiquet vehicule à été supprimé"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/vehicules'
        "404":
          description: "Le tiquet vehicule n'a pas été trouvé"
components:
  schemas:
    getusers:
      type: "object"
      properties:
        id:
          type: "integer"
          example: 1
        username:
          type: "string"
          example: "fred2468"
        mail:
          type: "string"
          example: "superfred2468@ynov.com"
        admin:
          type: "boolean"
          example: true
    users:
      type: "object"
      properties:
        id:
          type: "integer"
          example: 1
        username:
          type: "string"
          example: "fred2468"
        mail:
          type: "string"
          example: "superfred2468@ynov.com"
        password:
          type: "string"
          example: "F3084YFH30DK0ACKVkicnseifj"
        admin:
          type: "boolean"
          example: true
    vehicules:
      type: object
      properties:
        id:
          type: "integer"
          example: 1
        brand:
          type: "string"
          example: "Mercedes"
        motorisation:
          type: "string"
          example: 
        consumption:
          type: "number"
          example: 12.2
        buildImpact:
          type: "number"
          example: 2.5
        recycleImpact:
          type: "number"
          example: 2
        technology:
          type: "string"
          example: "electrique"
        type:
          type: "string"
          example: "berline"
        source:
          type: "string"
          example: "https://unsite.com"
        enginePower:
          type: "integer"
          example: 120
        model:
          type: "string"
          example: "tesla model 3"
    mixsEnergetiques:
      type: "object"
      properties:
        wind:
          type: "number"
          example: 13.3
        solar:
          type: "number"
          example: 13.3
        geothermal:
          type: "number"
          example: 13.3
        biomass:
          type: "number"
          example: 13.3
        hydroelectric:
          type: "number"
          example: 13.3
        nuclear:
          type: "number"
          example: 13.3
        coal:
          type: "number"
          example: 13.3
        oil:
          type: "number"
          example: 13.3
        gaz-fired:
          type: "number"
          example: 13.3
        source:
          type: "string"
          example: 13.3
        country:
          type: "string"
          example: "France"
    sourcesEnergies:
      type: "object"
      properties:
        id:
          type: integer
          example: 2
        wind:
          type: "number"
          example: 13.3
        solar:
          type: "number"
          example: 13.3
        geothermal:
          type: "number"
          example: 13.3
        biomass:
          type: "number"
          example: 13.3
        hydroelectric:
          type: "number"
          example: 13.3
        nuclear:
          type: "number"
          example: 13.3
        coal:
          type: "number"
          example: 13.3
        oil:
          type: "number"
          example: 13.3
        gaz-fired:
          type: "number"
          example: 13.3
        source:
          type: "number"
          example: 13.3